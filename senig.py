import base64;import os,sys,subprocess,platform;from colorama import Fore;import pyfiglet;import random

def clear():x=subprocess.Popen("cls",shell=True).communicate()if platform.system() == "Windows"else print("\033c",end="")

def enigma_encode(m,r,a,e=""):from random import choice;[a.insert(0,a.pop(choice(range(0,len(a)))))for i in r];e+=a[ord(m[0].upper())-65]if m[0].isalpha()else m[0];return e if len(m)==1 else enigma_encode(m[1:],r,a,e)

def pin_enigma_encode(m,r,a,p,e):for _ in range(int(p)):e = enigma_encode(m, r, a, e);m=e;return m

def enigma_decode(m,r,a,d=""):[a.insert(0,a.pop())for i in r[::-1]];d+=a[ord(m[0].upper())-65]if m[0].isalpha()else m[0];return d if len(m)==1 else enigma_decode(m[1:],r,a,d)

def pin_enigma_decode(m,r,a,p,d):for _ in range(int(p)):d = enigma_decode(m, r, a, d);m=d;return m

def encode_base64(m):return base64.b64encode(m.encode()).decode()

def decode_base64(m):return base64.b64decode(m).decode()

rotors = [list("QWISHMFDLJVEUYZTPCROGNAXBK"),list("PHOSGKJEUDVNYQCTIMABZWFLXR"),list("ZYKFJXBNIWRSACDOMULQGVHPTE"),list("GHNOUZMVYLQWSFXARKEJTCBPDI"),list("RPUHOSVMZEQTFDBGLWAKNXCIYJ"),list("ZNXSKHJPATEQVOGDCRIYLWBMUF"),list("HMEBDLXJRQSUIZFNVTWAGCPKOY"),list("EYHKDVJNSAULBCRGOWZIQPFTXM"),list("IYPDTSMRLZCOEAHNFJBGKQXVUW"),list("YUPWTZCRVLSEONBQHMAJFKXDIG"),list("KEGTWXFACMSYBQONZRHVIJUDLP"),list("CXIVQWPKNOJUHLFTZGSEDYMBAR"),list("IVHKEPGMAYTRWDJSNZCUFQLBOX"),list("MIOZJRYGTSUCNVQKDWXLHBAFEP"),list("VYCBXHOMEAFTPQUDNILWGRSJKZ"),list("NVYXILAKTJZOEFWCGRBHDQUPSM"),list("AQTFCEYRINGWKBLXMDHVZPSOJU"),list("BYDSROCWAEIGKQVJMLXTUNHZPF"),list("GEFLPMDYWRCOKSUBNJIXQVATZH"),list("SGNUAIEQHVBKYFDWRCJLZTXMOP"),list("XHISGMTCLAJWNKVBFYRQODUZEP"),list("LYCHVUOFWDRKNISEBMZPTAJXQG"),list("IFWOSLXNRBUDCZEPMVTJYAKGQH"),list("XGVQFPEDBCZUAJLWKMSRTNOHYI"),list("YHXVECBMKWFRJZPITSDUAGNLQO"),list("XJZVEGUHQBPKRTDMOFCISWAYLN"),list("TCBKADOJGVEMYIXZUWPNQRSHLF"),list("BXECVAPGHTZKFSNWQMIYJLUROD"),list("QDFUXIAJWPSGMZKYNHECBRLVTO"),list("NMOJAYVHFEIUQGDZKWBCSXRPLT"),list("GFDYTOZMKVPLIECWUSXNRHJBQA"),list("SIJMZYFVPDHGBCWRNXKLTEAUOQ"),list("XEOUJCRMLFSAIBWDPKTYVHQZGN"),list("NGQRDYAJSTEPZCOIFMLKUXHWBV"),list("VWHRQTPLBFDYOZMKNEXAGSCUIJ"),list("VHYSLGPCNXMOWZAIEJDUTRFQKB"),list("ETNDBRJWOULVYZIAPSFGXHCKQM"),list("XNABSDPHJGFCZWYVRQEOULTIMK"),list("NHRZOIEMSXFBLQGTUPCWDAVKYJ"),list("UFBXYJZWTHLRAIEOCQVNSMPDGK"),list("SYETWICNUZALPJHKGQBFVMDXOR"),list("LDNWQREHUAPBJICKSOFYGTMVZX"),list("CTFRAKUIPOQBWDXVZLHNGMSEJY"),list("OGJETNYBPXRLSMVAZICUFWDKHQ"),list("USPWTVCINQRGZHELYJKDBMXAFO"),list("TUVXCWHMBOEFAQNGJIKLSYZPRD"),list("EFLCBWJKSXINZMTGQRDAOYHUVP"),list("AECHTDQOYLRUFKZSVNGXIJPMBW"),list("YXOWMSUKJQIETGBVLAZCNFRDHP"),list("LVRNXISBEWTPZCGUOKYHAJQMFD"),list("XGMDLUVHESWJCBAQKFZNTYPRIO"),list("DFOMEJHRLXNWVAKSTBIUPGZYQC"),list("RZJYWIGKHNTPEUSVLQOXFMDCBA"),list("TBEZJWUPGMDFSCVRQXIAKLNHOY"),list("HENZROYPGADUKXCWQFMVJBSTLI"),list("JPHDNZKTMYGORUCIFASLQWXEVB"),list("RJDNIEQSWBPZUOHMCVYXLAKGTF"),list("JULIOMZXBERTNHVFYGSACQWDPK"),list("GKTPISJCNVBMWXQFRYALHZEOUD"),list("QMUWJAPVCBHKDFGXTYLNIOEZSR"),list("HBOQCZRYIASWFLPUMNEKTJGXDV"),list("CWYLUQXPKAJSOHNBIEGDZVRTFM"),list("DZFMTLSAVYJGQBHXOCNRWUEIPK"),list("KRHQFLIGPSANOEWYCVZUMBDXTJ"),list("ZVMDIUJBGPRFXQNHYKOTASWCEL"),list("UMQJNRZXOHIWGFYCBDEVLKPATS"),list("NSMQYAOXHPCGKTZFLWVDBJRUEI"),list("OBQZGLEURAVWDKFHITXSNPMJYC"),list("BOTVYFUWACIQKLESZNHMPXGDRJ"),list("QTFCNDUMOLYHIPXWZSAJREGVBK"),list("FOJRGAUPXCVSNZYDETLBHIMQWK"),list("BCRVSMYNFGLQEDJTWZUPAKOXIH"),list("VFWAKTCQBLHXOYSZJEMPUNGDIR"),list("UFYENBGMPIRKHCXQAVWZJTLSDO"),list("VBMAFNYXTJLPKSHUOCGQZDEWIR"),list("HESNRLJABFWOGMUQXYKVIZDTCP"),list("EFWYPLUZMGHKJBQVRNXOITSADC"),list("AEGXKOIQWBPCZDLYRTJFSUVNHM"),list("YMBUWIGXSPRHCAFEOLZQNKTDVJ"),list("FZIMEHLTXSUDCAGVQPRWBJYONK")];b="ABCDEFGHIJKLMNOPQRSTUVWXYZ";d="SENIG";f=pyfiglet.Figlet(font="standard");g=f.renderText(d);c=lambda:subprocess.Popen("cls",shell=True).communicate()if"Windows"==platform.system()else print("\033c",end="");h=lambda e,f,b:[(b.index(e.upper()),b.index(i[e.index(b[k].upper())])for i in reversed(f))][-1];j=lambda e,f,b:''.join([(b.index(e.upper()),[i.index(b[(b.index(e.upper())-b.index(i[e.index(b[k].upper())]))%len(b)])for i in f])for k in e])[::-1];k=lambda e,f,b:"".join([(b.index(e.upper()),[i.index(b[(b.index(e.upper())-b.index(i[e.index(b[k].upper())]))%len(b)])for i in f])for k in e]);l=lambda e:"".join([(e.encode()).decode()][::-1]);m=lambda e:base64.b64decode(e).decode();g=c();print(g+g+g+g+g);print(Fore.RED+"Make by Bell");while True:print(Fore.GREEN+"---------------------------------------------------");e=str(input("text:"));i=input("encode1 decode2:");n=input("PIN:");o=enigma_encode(e,a,b);p=pin_enigma_encode(o,a,b,n);q=encode_base64(p);print("Encoded message:",q)if int(i)==1 else print("Decoded message:",enigma_decode(pin_enigma_decode(m(e),a,b,n),a,b))if int(i)==2 else print("ERROR")
